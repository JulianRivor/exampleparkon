// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.imasd.webapp.domain.web;

import org.imasd.webapp.domain.Persona;
import org.imasd.webapp.domain.Telefono;
import org.imasd.webapp.domain.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Persona, String> ApplicationConversionServiceFactoryBean.getPersonaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.imasd.webapp.domain.Persona, java.lang.String>() {
            public String convert(Persona persona) {
                return new StringBuilder().append(persona.getNombre()).append(' ').append(persona.getApellido()).append(' ').append(persona.getDireccion()).append(' ').append(persona.getFechaDeNacimiento()).toString();
            }
        };
    }
    
    public Converter<Long, Persona> ApplicationConversionServiceFactoryBean.getIdToPersonaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.imasd.webapp.domain.Persona>() {
            public org.imasd.webapp.domain.Persona convert(java.lang.Long id) {
                return Persona.findPersona(id);
            }
        };
    }
    
    public Converter<String, Persona> ApplicationConversionServiceFactoryBean.getStringToPersonaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.imasd.webapp.domain.Persona>() {
            public org.imasd.webapp.domain.Persona convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Persona.class);
            }
        };
    }
    
    public Converter<Telefono, String> ApplicationConversionServiceFactoryBean.getTelefonoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.imasd.webapp.domain.Telefono, java.lang.String>() {
            public String convert(Telefono telefono) {
                return new StringBuilder().append(telefono.getNumero()).append(' ').append(telefono.getDescripcion()).toString();
            }
        };
    }
    
    public Converter<Long, Telefono> ApplicationConversionServiceFactoryBean.getIdToTelefonoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.imasd.webapp.domain.Telefono>() {
            public org.imasd.webapp.domain.Telefono convert(java.lang.Long id) {
                return Telefono.findTelefono(id);
            }
        };
    }
    
    public Converter<String, Telefono> ApplicationConversionServiceFactoryBean.getStringToTelefonoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.imasd.webapp.domain.Telefono>() {
            public org.imasd.webapp.domain.Telefono convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Telefono.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getPersonaToStringConverter());
        registry.addConverter(getIdToPersonaConverter());
        registry.addConverter(getStringToPersonaConverter());
        registry.addConverter(getTelefonoToStringConverter());
        registry.addConverter(getIdToTelefonoConverter());
        registry.addConverter(getStringToTelefonoConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
